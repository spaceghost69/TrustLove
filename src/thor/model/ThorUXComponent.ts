// tslint:disable
/**
 * JamRoom API
 * The JamRoom API
 *
 * The version of the OpenAPI document: 0.9.26
 * Contact: info@jamroom.pro
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../src/runtime';

// thorapi

/**
 * 
 * @export
 * @interface ThorUXComponent
 */
export type ThorUXComponent  = {
    /**
     * The type of the UX component.
     * @type {string}
     * @memberof ThorUXComponent
     */
    componentType?: string;
    /**
     * The status of the component in the UX.
     * @type {string}
     * @memberof ThorUXComponent
     */
    status?: ThorUXComponentStatusEnum;
    /**
     * The option for the component in the UX.
     * @type {string}
     * @memberof ThorUXComponent
     */
    settings?: ThorUXComponentSettingsEnum;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof ThorUXComponent
     */
    id?: string;
    /**
     * Unique identifier for owner of the object in the system
     * @type {string}
     * @memberof ThorUXComponent
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof ThorUXComponent
     */
    createdDate?: Date;
    /**
     * Date of object modification
     * @type {Date}
     * @memberof ThorUXComponent
     */
    modifiedDate?: Date;
}

export function ThorUXComponentFromJSON(json: any): ThorUXComponent {
    return {
        'componentType': !exists(json, 'componentType') ? undefined : json['componentType'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'settings': !exists(json, 'settings') ? undefined : json['settings'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'modifiedDate': !exists(json, 'modifiedDate') ? undefined : new Date(json['modifiedDate']),
    };
}

export function ThorUXComponentToJSON(value?: ThorUXComponent): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'componentType': value.componentType,
        'status': value.status,
        'settings': value.settings,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'modifiedDate': value.modifiedDate === undefined ? undefined : value.modifiedDate.toISOString(),
    };
}

/**
* @export
* @enum {string}
*/
export enum ThorUXComponentStatusEnum {
    Ready = 'ready',
    Pending = 'pending',
    Disabled = 'disabled',
    Hidden = 'hidden'
}
/**
* @export
* @enum {string}
*/
export enum ThorUXComponentSettingsEnum {
    Opt1 = 'opt1',
    Opt2 = 'opt2',
    Opt3 = 'opt3',
    Opt4 = 'opt4'
}


