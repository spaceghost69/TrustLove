// tslint:disable
/**
 * JamRoom API
 * The JamRoom API
 *
 * The version of the OpenAPI document: 0.9.26
 * Contact: info@jamroom.pro
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../src/runtime';

// thorapi

/**
 * Represents the configuration settings for a spatial audio node.
 * @export
 * @interface SpatialAudioEvent
 */
export type SpatialAudioEvent  = {
    /**
     * The unique identifier for the track configuration.
     * @type {string}
     * @memberof SpatialAudioEvent
     */
    trackId: string;
    /**
     * The timestamp of the audio event.
     * @type {Date}
     * @memberof SpatialAudioEvent
     */
    timestamp?: Date;
    /**
     * 1-based audio node X position, from -1.0 x to +1.0 x.
     * @type {number}
     * @memberof SpatialAudioEvent
     */
    x?: number;
    /**
     * 1-based audio node Y position, from -1.0 y to +1.0 y.
     * @type {number}
     * @memberof SpatialAudioEvent
     */
    y?: number;
    /**
     * 1-based audio node Z position, from -1.0 z to +1.0 z.
     * @type {number}
     * @memberof SpatialAudioEvent
     */
    z?: number;
    /**
     * 1-based audio node length dimension in relative units, 0.0 to 2,147,483,647.
     * @type {number}
     * @memberof SpatialAudioEvent
     */
    l?: number;
    /**
     * 1-based audio node width dimension in relative units, 0.0 to 2,147,483,647.
     * @type {number}
     * @memberof SpatialAudioEvent
     */
    w?: number;
    /**
     * 1-based audio node height dimension in relative units, 0.0 to 2,147,483,647.
     * @type {number}
     * @memberof SpatialAudioEvent
     */
    h?: number;
    /**
     * The audio effect.
     * @type {string}
     * @memberof SpatialAudioEvent
     */
    spatialEffect?: SpatialAudioEventSpatialEffectEnum;
    /**
     * Level of selected effect, from 0 (none) to 1 (maximum).
     * @type {number}
     * @memberof SpatialAudioEvent
     */
    effectAmount?: number;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof SpatialAudioEvent
     */
    id?: string;
    /**
     * Unique identifier for owner of the object in the system
     * @type {string}
     * @memberof SpatialAudioEvent
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof SpatialAudioEvent
     */
    createdDate?: Date;
    /**
     * Date of object modification
     * @type {Date}
     * @memberof SpatialAudioEvent
     */
    modifiedDate?: Date;
}

export function SpatialAudioEventFromJSON(json: any): SpatialAudioEvent {
    return {
        'trackId': json['trackId'],
        'timestamp': !exists(json, 'timestamp') ? undefined : new Date(json['timestamp']),
        'x': !exists(json, 'X') ? undefined : json['X'],
        'y': !exists(json, 'Y') ? undefined : json['Y'],
        'z': !exists(json, 'Z') ? undefined : json['Z'],
        'l': !exists(json, 'L') ? undefined : json['L'],
        'w': !exists(json, 'W') ? undefined : json['W'],
        'h': !exists(json, 'H') ? undefined : json['H'],
        'spatialEffect': !exists(json, 'spatialEffect') ? undefined : json['spatialEffect'],
        'effectAmount': !exists(json, 'effectAmount') ? undefined : json['effectAmount'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'modifiedDate': !exists(json, 'modifiedDate') ? undefined : new Date(json['modifiedDate']),
    };
}

export function SpatialAudioEventToJSON(value?: SpatialAudioEvent): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'trackId': value.trackId,
        'timestamp': value.timestamp === undefined ? undefined : value.timestamp.toISOString(),
        'X': value.x,
        'Y': value.y,
        'Z': value.z,
        'L': value.l,
        'W': value.w,
        'H': value.h,
        'spatialEffect': value.spatialEffect,
        'effectAmount': value.effectAmount,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'modifiedDate': value.modifiedDate === undefined ? undefined : value.modifiedDate.toISOString(),
    };
}

/**
* @export
* @enum {string}
*/
export enum SpatialAudioEventSpatialEffectEnum {
    Distortion = 'distortion',
    Saturation = 'saturation',
    Reverb = 'reverb',
    Flange = 'flange',
    Echo = 'echo'
}


