// tslint:disable
/**
 * JamRoom API
 * The JamRoom API
 *
 * The version of the OpenAPI document: 0.9.26
 * Contact: info@jamroom.pro
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../src/runtime';

// thorapi

/**
 * 
 * @export
 * @interface AudioChannel
 */
export type AudioChannel  = {
    /**
     * A unique display name for the audio channel.
     * @type {string}
     * @memberof AudioChannel
     */
    name: string;
    /**
     * The unique identifier for the track configuration.
     * @type {string}
     * @memberof AudioChannel
     */
    trackId?: string;
    /**
     * Initial decibel-based gain adjustment for the channel, from -10 dB to +10 dB.
     * @type {number}
     * @memberof AudioChannel
     */
    inputGainDB?: number;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof AudioChannel
     */
    id?: string;
    /**
     * Unique identifier for owner of the object in the system
     * @type {string}
     * @memberof AudioChannel
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof AudioChannel
     */
    createdDate?: Date;
    /**
     * Date of object modification
     * @type {Date}
     * @memberof AudioChannel
     */
    modifiedDate?: Date;
}

export function AudioChannelFromJSON(json: any): AudioChannel {
    return {
        'name': json['name'],
        'trackId': !exists(json, 'trackId') ? undefined : json['trackId'],
        'inputGainDB': !exists(json, 'inputGainDB') ? undefined : json['inputGainDB'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'modifiedDate': !exists(json, 'modifiedDate') ? undefined : new Date(json['modifiedDate']),
    };
}

export function AudioChannelToJSON(value?: AudioChannel): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'trackId': value.trackId,
        'inputGainDB': value.inputGainDB,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'modifiedDate': value.modifiedDate === undefined ? undefined : value.modifiedDate.toISOString(),
    };
}


