// tslint:disable
/**
 * JamRoom API
 * The JamRoom API
 *
 * The version of the OpenAPI document: 0.9.26
 * Contact: info@jamroom.pro
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../src/runtime';

// thorapi

/**
 * 
 * @export
 * @interface AclObjectIdentity
 */
export type AclObjectIdentity  = {
    /**
     * 
     * @type {number}
     * @memberof AclObjectIdentity
     */
    objectIdClass?: number;
    /**
     * 
     * @type {number}
     * @memberof AclObjectIdentity
     */
    objectIdIdentity?: number;
    /**
     * 
     * @type {number}
     * @memberof AclObjectIdentity
     */
    parentObject?: number;
    /**
     * 
     * @type {number}
     * @memberof AclObjectIdentity
     */
    ownerSid?: number;
    /**
     * 
     * @type {number}
     * @memberof AclObjectIdentity
     */
    entriesInheriting?: number;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof AclObjectIdentity
     */
    id?: string;
    /**
     * Unique identifier for owner of the object in the system
     * @type {string}
     * @memberof AclObjectIdentity
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof AclObjectIdentity
     */
    createdDate?: Date;
    /**
     * Date of object modification
     * @type {Date}
     * @memberof AclObjectIdentity
     */
    modifiedDate?: Date;
}

export function AclObjectIdentityFromJSON(json: any): AclObjectIdentity {
    return {
        'objectIdClass': !exists(json, 'object_id_class') ? undefined : json['object_id_class'],
        'objectIdIdentity': !exists(json, 'object_id_identity') ? undefined : json['object_id_identity'],
        'parentObject': !exists(json, 'parent_object') ? undefined : json['parent_object'],
        'ownerSid': !exists(json, 'owner_sid') ? undefined : json['owner_sid'],
        'entriesInheriting': !exists(json, 'entries_inheriting') ? undefined : json['entries_inheriting'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'modifiedDate': !exists(json, 'modifiedDate') ? undefined : new Date(json['modifiedDate']),
    };
}

export function AclObjectIdentityToJSON(value?: AclObjectIdentity): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'object_id_class': value.objectIdClass,
        'object_id_identity': value.objectIdIdentity,
        'parent_object': value.parentObject,
        'owner_sid': value.ownerSid,
        'entries_inheriting': value.entriesInheriting,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'modifiedDate': value.modifiedDate === undefined ? undefined : value.modifiedDate.toISOString(),
    };
}


